on:
  workflow_call:
    inputs:
      pypa-name:
        required: true
        type: string
      zipapp-entrypoint:
        required: false
        type: string
        default: null
      zipapp-name:
        required: false
        type: string
        default: null # TODO: figure out how to reference entrypoint here
    secrets:
      PYPI_API_TOKEN:
        required: true

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          shiv
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Build a zipapp
        if: ${{ inputs.zipapp-entrypoint != null }}
        run: >-
          python3 -m
          shiv
          -o ${{ inputs.zipapp-name }}
          -c ${{ inputs.zipapp-entrypoint }}
          .
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.zipapp-entrypoint != null }}
        with:
          name: ${{ inputs.zipapp-name }}
          path: ${{ inputs.zipapp-name }}
          retention-days: 3

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ inputs.pypa-name }}
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - uses: actions/download-artifact@v4
        if: ${{ inputs.zipapp-entrypoint != null }}
        with:
          name: ${{ inputs.zipapp-name }}
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
            ${{ inputs.zipapp-name }}
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/** ${{ inputs.zipapp-name }}
          --repo '${{ github.repository }}'

#   publish-to-testpypi:
#     if: false # uncomment this line to enable publishing to TestPyPI
#     name: Publish Python 🐍 distribution 📦 to TestPyPI
#     needs:
#       - build
#     runs-on: ubuntu-latest

#     environment:
#       name: testpypi
#       url: https://test.pypi.org/p/${{}}

#     permissions:
#       id-token: write # IMPORTANT: mandatory for trusted publishing

#     steps:
#       - name: Download all the dists
#         uses: actions/download-artifact@v4
#         with:
#           name: python-package-distributions
#           path: dist/
#       - name: Publish distribution 📦 to TestPyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           repository-url: https://test.pypi.org/legacy/
